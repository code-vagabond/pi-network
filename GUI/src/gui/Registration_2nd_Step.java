/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import org.rmi.common.ServerInterface;

/**
 *
 * @author Viktor
 */
public class Registration_2nd_Step extends javax.swing.JFrame {
String username;
ServerInterface server;
    /**
     * Creates new form Registration_2nd_Step
     */
    public Registration_2nd_Step() {
        this.cross = new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"));
        this.tick = new javax.swing.ImageIcon(getClass().getResource("/gui/001_06.png"));
        this.username = "";
        jLabel18.setText(this.username);
        initComponents();
        addListeners();
    }
    
    public Registration_2nd_Step(ServerInterface server, String username) {
        this.cross = new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"));
        this.tick = new javax.swing.ImageIcon(getClass().getResource("/gui/001_06.png"));
        initComponents();
        addListeners();
        this.server = server;
        this.username = username;
        jLabel18.setText(this.username);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eMail = new javax.swing.JTextField();
        passwordRep = new javax.swing.JPasswordField();
        password = new javax.swing.JPasswordField();
        birthYear = new javax.swing.JTextField();
        birthDay = new javax.swing.JTextField();
        birthMonth = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        bRegister = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        familyName = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(768, 500));
        setPreferredSize(new java.awt.Dimension(768, 500));
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("Registrierung: 2. Schritt");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(270, 30, 290, 50);

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Nachname");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 155, 100, 20);

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 204));
        jLabel4.setText("Passwort");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 225, 90, 20);

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));
        jLabel5.setText("Beschreibung");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 330, 140, 20);

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 204));
        jLabel6.setText("Passwort wdh.");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 260, 140, 20);

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 204));
        jLabel7.setText("Geburtsdatum");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(60, 295, 140, 20);
        getContentPane().add(eMail);
        eMail.setBounds(230, 190, 430, 25);
        getContentPane().add(passwordRep);
        passwordRep.setBounds(230, 260, 430, 25);
        getContentPane().add(password);
        password.setBounds(230, 225, 430, 25);

        birthYear.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        birthYear.setText("jjjj");
        getContentPane().add(birthYear);
        birthYear.setBounds(350, 295, 50, 25);

        birthDay.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        birthDay.setText("tt");
        birthDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthDayActionPerformed(evt);
            }
        });
        getContentPane().add(birthDay);
        birthDay.setBounds(230, 295, 50, 25);

        birthMonth.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        birthMonth.setText("mm");
        birthMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthMonthActionPerformed(evt);
            }
        });
        getContentPane().add(birthMonth);
        birthMonth.setBounds(290, 295, 50, 25);

        jScrollPane1.setToolTipText("");

        description.setColumns(20);
        description.setRows(3);
        description.setTabSize(3);
        jScrollPane1.setViewportView(description);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(230, 330, 430, 70);

        bRegister.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        bRegister.setForeground(new java.awt.Color(0, 204, 204));
        bRegister.setText("Registireren");
        bRegister.setEnabled(false);
        bRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegisterActionPerformed(evt);
            }
        });
        getContentPane().add(bRegister);
        bRegister.setBounds(550, 420, 120, 20);

        jButton3.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 204, 204));
        jButton3.setText("Zur√ºck");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(60, 420, 90, 20);

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 204));
        jLabel8.setText("E-Mail");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(60, 190, 90, 20);

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 204, 204));
        jLabel9.setText("Vorname");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(60, 120, 90, 20);
        getContentPane().add(familyName);
        familyName.setBounds(230, 155, 430, 25);

        firstName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                firstNameCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        getContentPane().add(firstName);
        firstName.setBounds(230, 120, 430, 25);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"))); // NOI18N
        jLabel10.setText("jLabel10");
        jLabel10.setToolTipText("Darf nicht leer sein");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(670, 120, 24, 24);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"))); // NOI18N
        jLabel11.setText("jLabel10");
        jLabel11.setToolTipText("Darf nicht leer sein");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(670, 155, 24, 24);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"))); // NOI18N
        jLabel12.setText("jLabel10");
        jLabel12.setToolTipText("E-Mail muss @ und danach ein . enthalten");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(670, 190, 24, 24);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"))); // NOI18N
        jLabel13.setText("jLabel10");
        jLabel13.setToolTipText("Muss 8 bis 20 Zeichen enthalten");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(670, 225, 24, 24);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"))); // NOI18N
        jLabel14.setText("jLabel10");
        jLabel14.setToolTipText("Muss mit dem Passwort √ºbereinstimmen");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(670, 260, 24, 24);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"))); // NOI18N
        jLabel15.setText("jLabel10");
        jLabel15.setToolTipText("Nach 1850 geboren");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(410, 295, 24, 24);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/badge_circle_cross_24_ns.png"))); // NOI18N
        jLabel16.setText("jLabel10");
        jLabel16.setToolTipText("Darf nicht leer sein");
        jLabel16.setName(""); // NOI18N
        getContentPane().add(jLabel16);
        jLabel16.setBounds(670, 350, 24, 24);

        jLabel17.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 204, 204));
        jLabel17.setText("Username");
        jLabel17.setToolTipText("");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(60, 85, 110, 20);

        jLabel18.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 204, 204));
        getContentPane().add(jLabel18);
        jLabel18.setBounds(230, 85, 430, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/Symbol-Pi-HD-Wallpaper-Background-1024x640 - Kopie (2).jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -20, 770, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void birthMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthMonthActionPerformed

    private void birthDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthDayActionPerformed

    private void bRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegisterActionPerformed
        String aliasname;
        String name;
        String vorname;
        String password;
        String email;
        String beschreibung;
        String geburtsdatum;
        int day;
        int month;
        int year;
        
        aliasname = username;
        name = familyName.getText();
        vorname = firstName.getText();
        password = org.rmi.client.RSA.encode(this.password.getText());
        email = eMail.getText();
        beschreibung = description.getText();
        day = Integer.parseInt(birthDay.getText());
        month = Integer.parseInt(birthMonth.getText());
        year = Integer.parseInt(birthYear.getText());
        geburtsdatum = String.format("%02d/%02d/%04d", day, month, year);

        try {
            server.createUser(aliasname, email, password, name, vorname, geburtsdatum, beschreibung);
            JOptionPane.showMessageDialog(rootPane, "Erfolgreich registriert");
            WelcomeScreen welcome = new WelcomeScreen();
            welcome.setVisible(true);
            super.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Registration_2nd_Step.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(Registration_2nd_Step.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bRegisterActionPerformed

    private void firstNameCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_firstNameCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameCaretPositionChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Registration_1st_Step firstStep = new Registration_1st_Step();
        firstStep.setVisible(true);
        super.dispose();        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration_2nd_Step.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration_2nd_Step.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration_2nd_Step.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration_2nd_Step.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration_2nd_Step().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bRegister;
    private javax.swing.JTextField birthDay;
    private javax.swing.JTextField birthMonth;
    private javax.swing.JTextField birthYear;
    private javax.swing.JTextArea description;
    private javax.swing.JTextField eMail;
    private javax.swing.JTextField familyName;
    private javax.swing.JTextField firstName;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField passwordRep;
    // End of variables declaration//GEN-END:variables
    // Other variable declarations
    boolean firstNameValid;
    boolean familyNameValid;
    boolean eMailValid;
    boolean passwordValid;
    boolean passwordRepValid;
    boolean birthDateValid;
    boolean descriptionValid;   
    Icon cross;
    Icon tick;
    
    private void addListeners() {
        InputHandler ih = new InputHandler();
        firstName.addCaretListener(ih);
        familyName.addCaretListener(ih);
	eMail.addCaretListener(ih);
	password.addCaretListener(ih);
	passwordRep.addCaretListener(ih);
	description.addCaretListener(ih);
	birthDay.addCaretListener(ih);
	birthMonth.addCaretListener(ih);
	birthYear.addCaretListener(ih);
    }

    private class InputHandler implements CaretListener{

        @Override
        public void caretUpdate(CaretEvent e) {
            firstNameValid = !firstName.getText().equals("") && (!firstName.getText().contains("'"));
            familyNameValid = !familyName.getText().equals("") && (!familyName.getText().contains("'"));
            String[] parts;
            parts = eMail.getText().split("@");
            if (parts.length == 2){
                    if (parts[1].contains(".")){
                            eMailValid = !eMail.getText().contains("'");
                    }else{
                            eMailValid = false;
                    }
            }else{
                    eMailValid = false;
            }

            int tmp = password.getText().length();
            passwordValid = ((tmp >= 8) && (tmp <= 20)) && (!password.getText().contains("'"));
            
            tmp = passwordRep.getText().length();
            passwordRepValid = passwordRep.getText().equals(password.getText()) && ((tmp >= 8) && (tmp <= 20)) && (!passwordRep.getText().contains("'"));

            try{
                    int day = Integer.parseInt(birthDay.getText());
                    int month = Integer.parseInt(birthMonth.getText());
                    int year = Integer.parseInt(birthYear.getText());
                    if (day > 31 || day < 1 || month > 12 || month < 1 || year < 1850){
                            birthDateValid = false;
                    }else{
                            birthDateValid = true;
                    }
            }catch (Exception ex){
                    birthDateValid = false;
            }


            tmp = description.getText().length();
            descriptionValid = ((tmp >= 1) && (tmp <= 256)) && (!description.getText().contains("'"));
            //set ticks
            if (firstNameValid){
                    jLabel10.setIcon(tick);
            }else{
                    jLabel10.setIcon(cross);
            }
            if (familyNameValid){
                    jLabel11.setIcon(tick);
            }else{
                    jLabel11.setIcon(cross);
            }
            if (eMailValid){
                    jLabel12.setIcon(tick);
            }else{
                    jLabel12.setIcon(cross);
            }
            if (passwordValid){
                    jLabel13.setIcon(tick);
            }else{
                    jLabel13.setIcon(cross);
            }
            if (passwordRepValid){
                    jLabel14.setIcon(tick);
            }else{
                    jLabel14.setIcon(cross);
            }
            if (birthDateValid){
                    jLabel15.setIcon(tick);
            }else{
                    jLabel15.setIcon(cross);
            }
            if (descriptionValid){
                    jLabel16.setIcon(tick);
            }else{
                    jLabel16.setIcon(cross);
            }

            if (firstNameValid && familyNameValid && eMailValid && passwordValid && passwordRepValid && birthDateValid && descriptionValid){
                    bRegister.setEnabled(true);
            }else{
                    bRegister.setEnabled(false);
            }
        }
    }
    
}